# Project information
site_name: ClinicaDL Documentation
site_author: ClinicaDL contributors
site_url: https://clinicadl.readthedocs.io/
site_description: >-
  Open-source deep learning software for reproducible neuroimaging processing

# Repository
repo_name: aramislab/clinicadl
repo_url: https://github.com/aramis-lab/clinicadl
#edit_uri: master/edit/doc

# Copyright
copyright: Copyright &copy; 2019-2021 ClinicaDL contributors

# Google Analytics
google_analytics:
  - UA-106080699-1
  - auto

# Configuration
theme:
  name: material
  custom_dir: docs/overrides
  icon:
    repo: material/github
  language: en
  logo: images/clinicadl_logo.png
  favicon: images/favicon.png
  #palette:
  #  primary: deep purple
  palette:
    - media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        icon: material/toggle-switch-off-outline
        name: Switch to dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/toggle-switch
        name: Switch to light mode

# Version panel
extra_javascript:
  - 'https://code.jquery.com/jquery-3.3.1.min.js'

# Customization
extra:
  feature:
    tabs: true
  social:
    - icon: material/github
      link: https://github.com/aramis-lab/
    - icon: material/twitter
      link: https://twitter.com/clinica_run
    - icon: material/earth
      link: http://www.aramislab.fr
  version:
    default: stable

extra_css:
  - stylesheets/extra.css

# Extensions
markdown_extensions:
  - admonition
  - codehilite
  - footnotes
  - pymdownx.details
  - pymdownx.superfences
  - toc:
      permalink: True

# Page tree
nav:
  - Home: index.md
  - Installation: Installation.md
  - First steps: Introduction.md
  - Prepare your metadata: TSVTools.md
  - Prepare your imaging data:
    - Introduction: Preprocessing/Introduction.md
    - Extract tensors: Preprocessing/Extract.md
    - Quality check: Preprocessing/QualityCheck.md
    - Generate synthetic data sets: Preprocessing/Generate.md
  - Hyperparameter exploration: RandomSearch.md
  - Train deep learning networks:
    - Train: Train/Introduction.md
    - Resume training: Train/Resume.md
    - Implementation details: Train/Details.md
  - Inference using trained models: Predict.md
  - Network output serialization: Tensors.md
  - Interpretation with gradient maps: Interpret.md
  - Advanced user guide:
      - Customize your training: Contribute/Custom.md
      - Test your modifications: Contribute/Test.md
      - Contribute to the project: Contribute/Newcomers.md
