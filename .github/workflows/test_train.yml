name: Train Tests (GPU)

on:
  push:
    branches: ["dev", "refactoring"]
  pull_request:
    branches: ["dev", "refactoring"]

permissions:
  contents: read

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  POETRY_VERSION: '1.8.3'
  PYTHON_VERSION: '3.11'

jobs:
  check_commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: check if message contain keywords
        id: check_commit
        run: |
          message=$(git log -1 --pretty=format:'%s')
          re="\[(skip gpu)\]"
          if [[ $message =~ $re ]]; then
            echo "::set-output name=match::true"
            echo "$message -> Match is true"
          else
            echo "$message -> Match is false"
          fi
    outputs:
      match: ${{ steps.check_commit.outputs.match }}
  test-train-gpu:
    needs: check_commit
    runs-on:
      - self-hosted
      - Linux
      - ubuntu
      - gpu
    if: ${{ needs.check_commit.outputs.match != 'true' }}
    steps:
      - name: echo
        run: |
          echo "${{ github.event.head_commit.message }}"
          echo "${{ contains(github.event.head_commit.message, '[skip gpu]') }}"
      - uses: actions/checkout@v4
      - uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: false
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Run tests for Train on GPU
        run: |
          source "${HOME}/miniconda3/etc/profile.d/conda.sh"
          make env.conda
          conda activate "${{ github.workspace }}"/env
          make install
          cd tests
          poetry run pytest \
          --junitxml=./test-reports/test_train_report.xml \
          --disable-warnings \
          --verbose \
          --basetemp=$HOME/actions_runner_workdir/train \
          --input_data_directory=/mnt/data/clinicadl_data_ci/data_ci \
          -k test_train
      - name: Cleaning
        run: |
          rm -rf $HOME/actions_runner_workdir/train/*
